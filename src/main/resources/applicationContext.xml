<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

<!-- Component-scan 설정 -->
<context:component-scan base-package="com.springbook.biz"></context:component-scan>
<!-- AOP 설정 -->
<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
<!-- DataSource 설정  방법 - 1-->
<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	<property name="driverClassName" value="org.h2.Driver"/>
	<property name="url" value="jdbc:h2:tcp://localhost/~/test"/>
	<property name="username" value="scott"/>
	<property name="password" value="tiger"/>
</bean>	
<!-- DataSource 설정 방법 - 2 -->
<!-- <context:property-placeholder location="classpath:config/database.properties" />

<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	<property name="driverClassName" value="${jdbc.driver}"/>
	<property name="url" value="${jdbc.url}"/>
	<property name="username" value="${jdbc.username}"/>
	<property name="password" value="${jdbc.password}"/>
</bean>	 -->
<!-- Spring JDBC 설정 -->
<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
	<property name="dataSource" ref="dataSource"/>
</bean>
<!-- 트랜잭션 어드바이스 설정 -->
<bean id="txManager"
class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	<property name="dataSource" ref="dataSource"></property>
</bean>

<tx:advice id="txAdvice" transaction-manager="txManager">
	<tx:attributes>
		<tx:method name="get*" read-only="true"/>
		<tx:method name="*" />
	</tx:attributes>
</tx:advice>

<aop:config>
	<aop:pointcut id="txPointcut"
					expression="execution(* com.springbook.biz..*(..))"/>
	<aop:advisor pointcut-ref="txPointcut" advice-ref="txAdvice"/>
</aop:config>

 <!--  <bean id="log" class="com.springbook.biz.common.LogAdvice"/>
<aop:config>
	<aop:pointcut id="allPointcut" expression="execution(* com.springbook.biz..*Impl.*(..))"/>
	<aop:pointcut id="getPointcut" expression="execution(* com.springbook.biz..*Impl.get*(..))"/>
	<aop:aspect ref="log">
		<aop:before pointcut-ref="getPointcut" method="printLog"/>
	</aop:aspect>
</aop:config>    -->
<!-- <bean id="userService" class="com.springbook.biz.user.impl.UserServiceImpl">
	<property name="userDAO" ref="userDAO"></property>
</bean>

<bean id="userDAO" class="com.springbook.biz.user.impl.UserDAO"></bean>-->
<!-- P172 before -->
<!-- <bean id="before" class="com.springbook.biz.common.BeforeAdvice"/>
<bean id="afterReturning" class="com.springbook.biz.common.AfterReturningAdvice"/>
<bean id="afterThrowing" class="com.springbook.biz.common.AfterThrowingAdvice"/>
<bean id="after" class="com.springbook.biz.common.AfterAdvice"/>
<bean id="around" class="com.springbook.biz.common.AroundAdvice"/>
<aop:config>
	<aop:pointcut id="getPointcut" 
	expression="execution(* com.springbook.biz..*Impl.*(..))"/>
	
	<aop:aspect ref="afterThrowing">
		<aop:after-throwing pointcut-ref="getPointcut" method="exceptionLog"
					throwing = "exceptObj"/>
	</aop:aspect>
</aop:config> -->
</beans>
